generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String  @unique
  password String
  name     String?
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  authentication_member      authentication_member?
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model authentication_member {
  id                                BigInt                              @id @default(autoincrement())
  user_id                           Int?                                @unique
  accounting_equitycapital          accounting_equitycapital[]
  accounting_equitydivident         accounting_equitydivident[]
  accounting_stakeholderbook        accounting_stakeholderbook[]
  auth_user                         auth_user?                          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authentication_member_user_id_af273d22_fk_auth_user_id")
  authentication_member_permissions authentication_member_permissions[]
}

model crm_company {
  id                                 BigInt                               @id @default(autoincrement())
  name                               String                               @db.VarChar(255)
  email                              String                               @db.VarChar(254)
  phone                              String                               @db.VarChar(15)
  address                            String                               @db.VarChar(255)
  country                            String                               @db.VarChar(100)
  website                            String                               @db.VarChar(200)
  backgroundInfo                     String                               @db.VarChar(400)
  created_at                         DateTime                             @db.Timestamptz(6)
  accounting_assetaccountsreceivable accounting_assetaccountsreceivable[]
  accounting_invoice                 accounting_invoice[]
  crm_contact                        crm_contact[]
  crm_note                           crm_note[]
  todo_task                          todo_task[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model crm_contact {
  id                                 BigInt                               @id @default(autoincrement())
  name                               String                               @db.VarChar(200)
  email                              String                               @db.VarChar(254)
  address                            String                               @db.VarChar(255)
  birthday                           DateTime?                            @db.Date
  city                               String                               @db.VarChar(100)
  company_name                       String                               @db.VarChar(255)
  country                            String                               @db.VarChar(100)
  job_title                          String                               @db.VarChar(100)
  phone                              String                               @db.VarChar(15)
  state                              String                               @db.VarChar(100)
  zip_code                           String                               @db.VarChar(10)
  company_id                         BigInt?
  created_at                         DateTime                             @db.Timestamptz(6)
  accounting_assetaccountsreceivable accounting_assetaccountsreceivable[]
  accounting_invoice                 accounting_invoice[]
  crm_company                        crm_company?                         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crm_contact_company_id_5104bcf2_fk_crm_company_id")
  crm_note                           crm_note[]
  todo_task                          todo_task[]

  @@index([company_id], map: "crm_contact_company_id_5104bcf2")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model crm_note {
  id            BigInt       @id @default(autoincrement())
  content       String
  created_at    DateTime     @db.Timestamptz(6)
  contact_id    BigInt?
  company_id    BigInt?
  modified_date DateTime     @db.Timestamptz(6)
  crm_company   crm_company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crm_note_company_id_9ceedb83_fk_crm_company_id")
  crm_contact   crm_contact? @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crm_note_contact_id_8d258ea9_fk_crm_contact_id")

  @@index([company_id], map: "crm_note_company_id_9ceedb83")
  @@index([contact_id], map: "crm_note_contact_id_8d258ea9")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model todo_task {
  id           BigInt       @id @default(autoincrement())
  task_name    String       @db.VarChar(200)
  due_date     DateTime     @db.Date
  description  String?
  completed    Boolean
  created_at   DateTime     @db.Timestamptz(6)
  completed_at DateTime     @db.Timestamptz(6)
  company_id   BigInt?
  contact_id   BigInt?
  crm_company  crm_company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "todo_task_company_id_fed9e4bc_fk_crm_company_id")
  crm_contact  crm_contact? @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "todo_task_contact_id_4691b54e_fk_crm_contact_id")

  @@index([company_id], map: "todo_task_company_id_fed9e4bc")
  @@index([contact_id], map: "todo_task_contact_id_4691b54e")
}

model products {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String?  @unique
  files      Json[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_assetaccountsreceivable {
  id                          BigInt                      @id @default(autoincrement())
  created_at                  DateTime                    @db.Timestamptz(6)
  amount                      Decimal                     @db.Decimal(10, 2)
  book_id                     BigInt
  company_id                  BigInt?
  contact_id                  BigInt?
  currency_id                 BigInt
  invoice_id                  BigInt?
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_book_id_9b813c34_fk_accountin")
  crm_company                 crm_company?                @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_company_id_17a2d71d_fk_crm_compa")
  crm_contact                 crm_contact?                @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_contact_id_1f96866a_fk_crm_conta")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_currency_id_3d6903f3_fk_accountin")
  accounting_invoice          accounting_invoice?         @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_invoice_id_f7473197_fk_accountin")

  @@index([book_id], map: "accounting_assetaccountsreceivable_book_id_9b813c34")
  @@index([company_id], map: "accounting_assetaccountsreceivable_company_id_17a2d71d")
  @@index([contact_id], map: "accounting_assetaccountsreceivable_contact_id_1f96866a")
  @@index([currency_id], map: "accounting_assetaccountsreceivable_currency_id_3d6903f3")
  @@index([invoice_id], map: "accounting_assetaccountsreceivable_invoice_id_f7473197")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_assetcash {
  id                          BigInt                      @id @default(autoincrement())
  created_at                  DateTime                    @db.Timestamptz(6)
  currency_balance            Decimal?                    @db.Decimal(10, 2)
  book_id                     BigInt
  currency_id                 BigInt
  transaction_id              BigInt?
  amount                      Decimal                     @db.Decimal(10, 2)
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetcash_book_id_c4df870a_fk_accounting_book_id")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetcash_currency_id_0b544ce7_fk_accountin")
  accounting_transaction      accounting_transaction?     @relation(fields: [transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetcash_transaction_id_b8c3e7c9_fk_accountin")

  @@index([book_id], map: "accounting_assetcash_book_id_c4df870a")
  @@index([currency_id], map: "accounting_assetcash_currency_id_0b544ce7")
  @@index([transaction_id], map: "accounting_assetcash_transaction_id_b8c3e7c9")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_assetinventorygood {
  id                          BigInt                      @id @default(autoincrement())
  created_at                  DateTime                    @db.Timestamptz(6)
  unit_cost                   Decimal                     @db.Decimal(10, 2)
  quantity                    Decimal                     @db.Decimal(12, 2)
  status                      String                      @db.VarChar
  warehouse                   String?                     @db.VarChar
  location                    String?                     @db.VarChar
  book_id                     BigInt
  currency_id                 BigInt
  name                        String                      @unique @db.VarChar(300)
  modified_at                 DateTime?                   @db.Date
  stock_type                  String?                     @db.VarChar
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetinve_book_id_4d578031_fk_accountin")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetinve_currency_id_d6290f64_fk_accountin")

  @@index([book_id], map: "accounting_assetinventorygood_book_id_4d578031")
  @@index([currency_id], map: "accounting_assetinventorygood_currency_id_d6290f64")
  @@index([name], map: "accounting_assetinventorygood_name_fb1611c3_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_assetinventoryrawmaterial {
  id                          BigInt                      @id @default(autoincrement())
  created_at                  DateTime                    @db.Timestamptz(6)
  name                        String                      @db.VarChar
  stock_id                    String?                     @db.VarChar
  unit_cost                   Decimal                     @db.Decimal(10, 2)
  unit_of_measurement         String?                     @db.VarChar
  quantity                    Decimal                     @db.Decimal(12, 2)
  warehouse                   String?                     @db.VarChar
  location                    String?                     @db.VarChar
  supplier_id                 BigInt?
  receipt_number              String?                     @db.VarChar
  book_id                     BigInt
  currency_id                 BigInt
  raw_type                    String                      @db.VarChar
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetinve_book_id_687d7f7c_fk_accountin")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetinve_currency_id_ae5f5615_fk_accountin")
  crm_supplier                crm_supplier?               @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetinve_supplier_id_859b8417_fk_crm_suppl")

  @@unique([name, supplier_id], map: "unique_name_supplier")
  @@index([book_id], map: "accounting_assetinventoryrawmaterial_book_id_687d7f7c")
  @@index([currency_id], map: "accounting_assetinventoryrawmaterial_currency_id_ae5f5615")
  @@index([supplier_id], map: "accounting_assetinventoryrawmaterial_supplier_id_859b8417")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model accounting_book {
  id                                   BigInt                                 @id @default(autoincrement())
  created_at                           DateTime                               @db.Timestamptz(6)
  name                                 String                                 @unique @db.VarChar(50)
  total_shares                         Int
  accounting_assetaccountsreceivable   accounting_assetaccountsreceivable[]
  accounting_assetcash                 accounting_assetcash[]
  accounting_assetinventorygood        accounting_assetinventorygood[]
  accounting_assetinventoryrawmaterial accounting_assetinventoryrawmaterial[]
  accounting_cashaccount               accounting_cashaccount[]
  accounting_equitycapital             accounting_equitycapital[]
  accounting_equitydivident            accounting_equitydivident[]
  accounting_equityexpense             accounting_equityexpense[]
  accounting_equityrevenue             accounting_equityrevenue[]
  accounting_intransfer                accounting_intransfer[]
  accounting_invoice                   accounting_invoice[]
  accounting_liabilityaccountspayable  accounting_liabilityaccountspayable[]
  accounting_metric                    accounting_metric[]
  accounting_stakeholderbook           accounting_stakeholderbook[]
  accounting_transaction               accounting_transaction[]

  @@index([name], map: "accounting_book_name_6eb9bad9_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_cashaccount {
  id                                                                                 BigInt                      @id(map: "accounting_cashcategory_pkey") @default(autoincrement())
  name                                                                               String                      @db.VarChar(50)
  balance                                                                            Decimal                     @db.Decimal(10, 2)
  book_id                                                                            BigInt
  currency_id                                                                        BigInt
  accounting_book                                                                    accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_cashaccount_book_id_90f88e20_fk_accounting_book_id")
  accounting_currencycategory                                                        accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_cashcateg_currency_id_ed9ccd42_fk_accountin")
  accounting_equitycapital                                                           accounting_equitycapital[]
  accounting_equitydivident                                                          accounting_equitydivident[]
  accounting_equityexpense                                                           accounting_equityexpense[]
  accounting_equityrevenue                                                           accounting_equityrevenue[]
  accounting_intransfer_accounting_intransfer_destination_idToaccounting_cashaccount accounting_intransfer[]     @relation("accounting_intransfer_destination_idToaccounting_cashaccount")
  accounting_intransfer_accounting_intransfer_source_idToaccounting_cashaccount      accounting_intransfer[]     @relation("accounting_intransfer_source_idToaccounting_cashaccount")
  accounting_transaction                                                             accounting_transaction[]

  @@unique([book_id, name], map: "unique_book_cashaccount")
  @@index([book_id], map: "accounting_cashcategory_book_id_56033a99")
  @@index([currency_id], map: "accounting_cashcategory_currency_id_ed9ccd42")
  @@index([name], map: "accounting_cashcategory_name_431b4fdc_like")
}

model accounting_currencycategory {
  id                                   BigInt                                 @id @default(autoincrement())
  code                                 String                                 @unique @db.VarChar(3)
  name                                 String                                 @unique @db.VarChar(50)
  symbol                               String?                                @db.VarChar(5)
  accounting_assetaccountsreceivable   accounting_assetaccountsreceivable[]
  accounting_assetcash                 accounting_assetcash[]
  accounting_assetinventorygood        accounting_assetinventorygood[]
  accounting_assetinventoryrawmaterial accounting_assetinventoryrawmaterial[]
  accounting_cashaccount               accounting_cashaccount[]
  accounting_equitycapital             accounting_equitycapital[]
  accounting_equitydivident            accounting_equitydivident[]
  accounting_equityexpense             accounting_equityexpense[]
  accounting_equityrevenue             accounting_equityrevenue[]
  accounting_intransfer                accounting_intransfer[]
  accounting_liabilityaccountspayable  accounting_liabilityaccountspayable[]
  accounting_transaction               accounting_transaction[]

  @@index([code], map: "accounting_currencycategory_code_afbf6634_like")
  @@index([name], map: "accounting_currencycategory_name_62f10b06_like")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_equitycapital {
  id                          BigInt                       @id @default(autoincrement())
  created_at                  DateTime                     @db.Timestamptz(6)
  amount                      Decimal                      @db.Decimal(10, 2)
  note                        String?
  date_invested               DateTime                     @db.Date
  book_id                     BigInt
  cash_account_id             BigInt
  member_id                   BigInt
  currency_id                 BigInt?
  new_shares_issued           Int
  accounting_cashaccount      accounting_cashaccount       @relation(fields: [cash_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitycap_cash_account_id_b51b8a10_fk_accountin")
  accounting_currencycategory accounting_currencycategory? @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitycap_currency_id_fbe16291_fk_accountin")
  authentication_member       authentication_member        @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitycap_member_id_3a31aa46_fk_authentic")
  accounting_book             accounting_book              @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitycapital_book_id_3bb7b1c9_fk_accounting_book_id")

  @@index([book_id], map: "accounting_equitycapital_book_id_3bb7b1c9")
  @@index([cash_account_id], map: "accounting_equitycapital_cash_account_id_b51b8a10")
  @@index([currency_id], map: "accounting_equitycapital_currency_id_fbe16291")
  @@index([member_id], map: "accounting_equitycapital_stakeholder_id_249de618")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_equitydivident {
  id                          BigInt                       @id @default(autoincrement())
  created_at                  DateTime                     @db.Timestamptz(6)
  amount                      Decimal                      @db.Decimal(10, 2)
  date                        DateTime                     @db.Date
  description                 String                       @db.VarChar(200)
  book_id                     BigInt
  cash_account_id             BigInt
  currency_id                 BigInt?
  member_id                   BigInt?
  accounting_book             accounting_book              @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitydiv_book_id_4784d867_fk_accountin")
  accounting_cashaccount      accounting_cashaccount       @relation(fields: [cash_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitydiv_cash_account_id_2006fe5d_fk_accountin")
  accounting_currencycategory accounting_currencycategory? @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitydiv_currency_id_22acf853_fk_accountin")
  authentication_member       authentication_member?       @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equitydiv_member_id_160e5dde_fk_authentic")

  @@index([book_id], map: "accounting_equitydivident_book_id_4784d867")
  @@index([cash_account_id], map: "accounting_equitydivident_cash_account_id_2006fe5d")
  @@index([currency_id], map: "accounting_equitydivident_currency_id_22acf853")
  @@index([member_id], map: "accounting_equitydivident_stakeholder_id_5dbb375b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_equityexpense {
  id                          BigInt                      @id(map: "accounting_expense_pkey") @default(autoincrement())
  amount                      Decimal                     @db.Decimal(10, 2)
  date                        DateTime                    @db.Date
  description                 String                      @db.VarChar(200)
  created_at                  DateTime                    @db.Timestamptz(6)
  book_id                     BigInt
  category_id                 BigInt?
  currency_id                 BigInt
  cash_account_id             BigInt
  accounting_cashaccount      accounting_cashaccount      @relation(fields: [cash_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equityexp_cash_account_id_bbe4c920_fk_accountin")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equityexp_currency_id_2e603d51_fk_accountin")
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_expense_book_id_7cf396e0_fk_accounting_book_id")
  accounting_expensecategory  accounting_expensecategory? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_expense_category_id_4c3c6039_fk_accountin")

  @@index([cash_account_id], map: "accounting_equityexpense_cash_account_id_bbe4c920")
  @@index([book_id], map: "accounting_expense_book_id_7cf396e0")
  @@index([category_id], map: "accounting_expense_category_id_4c3c6039")
  @@index([currency_id], map: "accounting_expense_currency_id_4fa319fa")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_equityrevenue {
  id                          BigInt                       @id @default(autoincrement())
  created_at                  DateTime                     @db.Timestamptz(6)
  amount                      Decimal                      @db.Decimal(10, 2)
  date                        DateTime                     @db.Date
  description                 String                       @db.VarChar(200)
  book_id                     BigInt
  cash_account_id             BigInt
  currency_id                 BigInt?
  invoice_number              String?                      @unique(map: "accounting_equityrevenue_invoice_number_2ddec667_uniq") @db.VarChar(20)
  revenue_type                String                       @db.VarChar
  accounting_cashaccount      accounting_cashaccount       @relation(fields: [cash_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equityrev_cash_account_id_2fb5d4af_fk_accountin")
  accounting_currencycategory accounting_currencycategory? @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equityrev_currency_id_52d19808_fk_accountin")
  accounting_book             accounting_book              @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_equityrevenue_book_id_784ed443_fk_accounting_book_id")

  @@index([book_id], map: "accounting_equityrevenue_book_id_784ed443")
  @@index([cash_account_id], map: "accounting_equityrevenue_cash_account_id_2fb5d4af")
  @@index([currency_id], map: "accounting_equityrevenue_currency_id_52d19808")
  @@index([invoice_number], map: "accounting_equityrevenue_invoice_number_2ddec667_like")
}

model accounting_expensecategory {
  id                       BigInt                     @id @default(autoincrement())
  name                     String                     @unique @db.VarChar(100)
  accounting_equityexpense accounting_equityexpense[]

  @@index([name], map: "accounting_expensecategory_name_cb9859d6_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_intransfer {
  id                                                                                  BigInt                      @id @default(autoincrement())
  created_at                                                                          DateTime                    @db.Timestamptz(6)
  amount                                                                              Decimal                     @db.Decimal(10, 2)
  description                                                                         String?                     @db.VarChar(200)
  book_id                                                                             BigInt
  currency_id                                                                         BigInt
  destination_id                                                                      BigInt
  source_id                                                                           BigInt
  accounting_currencycategory                                                         accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_intransfe_currency_id_fda2e854_fk_accountin")
  accounting_cashaccount_accounting_intransfer_destination_idToaccounting_cashaccount accounting_cashaccount      @relation("accounting_intransfer_destination_idToaccounting_cashaccount", fields: [destination_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_intransfe_destination_id_c6bc6280_fk_accountin")
  accounting_cashaccount_accounting_intransfer_source_idToaccounting_cashaccount      accounting_cashaccount      @relation("accounting_intransfer_source_idToaccounting_cashaccount", fields: [source_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_intransfe_source_id_1faa0353_fk_accountin")
  accounting_book                                                                     accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_intransfer_book_id_e5b465c2_fk_accounting_book_id")

  @@index([book_id], map: "accounting_intransfer_book_id_e5b465c2")
  @@index([currency_id], map: "accounting_intransfer_currency_id_fda2e854")
  @@index([destination_id], map: "accounting_intransfer_destination_id_c6bc6280")
  @@index([source_id], map: "accounting_intransfer_source_id_1faa0353")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_invoice {
  id                                 BigInt                               @id @default(autoincrement())
  created_at                         DateTime                             @db.Timestamptz(6)
  due_cate                           DateTime                             @db.Timestamptz(6)
  invoice_type                       String                               @db.VarChar
  book_id                            BigInt
  company_id                         BigInt?
  contact_id                         BigInt?
  items                              Json
  paid                               Decimal                              @db.Decimal(10, 2)
  total                              Decimal                              @db.Decimal(10, 2)
  accounting_assetaccountsreceivable accounting_assetaccountsreceivable[]
  accounting_book                    accounting_book                      @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_invoice_book_id_3df06427_fk_accounting_book_id")
  crm_company                        crm_company?                         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_invoice_company_id_38eec83f_fk_crm_company_id")
  crm_contact                        crm_contact?                         @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_invoice_contact_id_b3fed0ee_fk_crm_contact_id")

  @@index([book_id], map: "accounting_invoice_book_id_3df06427")
  @@index([company_id], map: "accounting_invoice_company_id_38eec83f")
  @@index([contact_id], map: "accounting_invoice_contact_id_b3fed0ee")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_liabilityaccountspayable {
  id                          BigInt                      @id(map: "accounting_assetaccountspayable_pkey") @default(autoincrement())
  created_at                  DateTime                    @db.Timestamptz(6)
  amount                      Decimal                     @db.Decimal(10, 2)
  receipt                     String?                     @db.VarChar
  supplier_id                 BigInt?
  book_id                     BigInt
  currency_id                 BigInt
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_book_id_5c5fc572_fk_accountin")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_currency_id_14f235b1_fk_accountin")
  crm_supplier                crm_supplier?               @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_assetacco_supplier_id_4b8ecab4_fk_crm_suppl")

  @@index([book_id], map: "accounting_assetaccountspayable_book_id_5c5fc572")
  @@index([currency_id], map: "accounting_assetaccountspayable_currency_id_14f235b1")
  @@index([supplier_id], map: "accounting_assetaccountspayable_supplier_id_4b8ecab4")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_metric {
  id                  BigInt           @id @default(autoincrement())
  created_at          DateTime         @db.Timestamptz(6)
  balance             Decimal          @db.Decimal(12, 2)
  money_in            Decimal          @db.Decimal(12, 2)
  money_out           Decimal          @db.Decimal(12, 2)
  burn                Decimal          @db.Decimal(12, 2)
  inventory           Decimal          @db.Decimal(12, 2)
  accounts_receivable Decimal          @db.Decimal(12, 2)
  accounts_payable    Decimal          @db.Decimal(12, 2)
  runway              Decimal          @db.Decimal(12, 1)
  growth_rate         Decimal          @db.Decimal(12, 1)
  default_alive       Boolean
  book_id             BigInt?
  accounting_book     accounting_book? @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_metric_book_id_2ff86ad8_fk_accounting_book_id")

  @@index([book_id], map: "accounting_metric_book_id_2ff86ad8")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_stakeholderbook {
  id                    BigInt                 @id @default(autoincrement())
  book_id               BigInt
  member_id             BigInt?
  shares                Int
  accounting_book       accounting_book        @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_stakehold_book_id_1ba92948_fk_accountin")
  authentication_member authentication_member? @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_stakehold_member_id_31ff9801_fk_authentic")

  @@unique([member_id, book_id], map: "accounting_stakeholderbook_member_id_book_id_9e19b25e_uniq")
  @@index([book_id], map: "accounting_stakeholderbook_book_id_1ba92948")
  @@index([member_id], map: "accounting_stakeholderbook_member_id_31ff9801")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounting_transaction {
  id                          BigInt                      @id @default(autoincrement())
  created_at                  DateTime                    @db.Timestamptz(6)
  value                       Decimal                     @db.Decimal(12, 2)
  type                        String?                     @db.VarChar(50)
  book_id                     BigInt
  currency_id                 BigInt
  account_id                  BigInt?
  type_pk                     Int?
  account_balance             Decimal?                    @db.Decimal(12, 2)
  accounting_assetcash        accounting_assetcash[]
  accounting_cashaccount      accounting_cashaccount?     @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_transacti_account_id_cd2bdf36_fk_accountin")
  accounting_currencycategory accounting_currencycategory @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_transacti_currency_id_73d486f9_fk_accountin")
  accounting_book             accounting_book             @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounting_transaction_book_id_ef611a98_fk_accounting_book_id")

  @@index([account_id], map: "accounting_transaction_account_id_cd2bdf36")
  @@index([book_id], map: "accounting_transaction_book_id_ef611a98")
  @@index([currency_id], map: "accounting_transaction_currency_id_73d486f9")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model authentication_member_permissions {
  id                        BigInt                    @id(map: "authentication_member_access_levels_pkey") @default(autoincrement())
  member_id                 BigInt
  permission_id             BigInt
  authentication_member     authentication_member     @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authentication_membe_member_id_04e54cd1_fk_authentic")
  authentication_permission authentication_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authentication_membe_permission_id_77771c1a_fk_authentic")

  @@unique([member_id, permission_id], map: "authentication_member_ac_member_id_accesslevel_id_ea9935b1_uniq")
  @@index([permission_id], map: "authentication_member_access_levels_accesslevel_id_18b0c19b")
  @@index([member_id], map: "authentication_member_access_levels_member_id_04e54cd1")
}

model authentication_permission {
  id                                BigInt                              @id(map: "authentication_accesslevel_pkey") @default(autoincrement())
  name                              String                              @unique(map: "authentication_accesslevel_name_key") @db.VarChar(100)
  description                       String?
  authentication_member_permissions authentication_member_permissions[]

  @@index([name], map: "authentication_accesslevel_name_d54598b1_like")
}

model crm_supplier {
  id                                   BigInt                                 @id @default(autoincrement())
  company_name                         String?                                @db.VarChar(300)
  contact_name                         String?                                @db.VarChar(300)
  email                                String                                 @db.VarChar(254)
  phone                                String                                 @db.VarChar(15)
  website                              String                                 @db.VarChar(200)
  address                              String                                 @db.VarChar(255)
  country                              String                                 @db.VarChar(100)
  created_at                           DateTime                               @db.Timestamptz(6)
  accounting_assetinventoryrawmaterial accounting_assetinventoryrawmaterial[]
  accounting_liabilityaccountspayable  accounting_liabilityaccountspayable[]
  marketing_product_vendor             marketing_product_vendor[]
}

model marketing_collection {
  id                            BigInt                          @id @default(autoincrement())
  title                         String?                         @db.VarChar(255)
  description                   String?
  image                         String?                         @db.VarChar(100)
  created_at                    DateTime                        @db.Timestamptz(6)
  marketing_product_collections marketing_product_collections[]
}

model marketing_product {
  id                            BigInt                          @id @default(autoincrement())
  created_at                    DateTime                        @db.Timestamptz(6)
  title                         String?                         @db.VarChar(255)
  description                   String?
  sku                           String?                         @db.VarChar(12)
  barcode                       String?                         @db.VarChar(14)
  tags                          String[]                        @db.VarChar(100)
  category                      String?                         @db.VarChar
  type                          String?                         @db.VarChar
  unit_of_measurement           String?                         @db.VarChar
  quantity                      Decimal?                        @db.Decimal(10, 2)
  price                         Decimal?                        @db.Decimal(10, 2)
  cost                          Decimal?                        @db.Decimal(10, 2)
  featured                      Boolean
  selling_while_out_of_stock    Boolean
  weight                        Decimal?                        @db.Decimal(10, 2)
  unit_of_weight                String                          @db.VarChar
  marketing_product_collections marketing_product_collections[]
  marketing_product_vendor      marketing_product_vendor[]
  marketing_productfile         marketing_productfile[]
  marketing_productvariant      marketing_productvariant[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model marketing_product_collections {
  id                   BigInt               @id @default(autoincrement())
  product_id           BigInt
  collection_id        BigInt
  marketing_collection marketing_collection @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_product_co_collection_id_ec03201a_fk_marketing")
  marketing_product    marketing_product    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_product_co_product_id_ab29b623_fk_marketing")

  @@unique([product_id, collection_id], map: "marketing_product_collec_product_id_collection_id_2d075b49_uniq")
  @@index([collection_id], map: "marketing_product_collections_collection_id_ec03201a")
  @@index([product_id], map: "marketing_product_collections_product_id_ab29b623")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model marketing_product_vendor {
  id                BigInt            @id @default(autoincrement())
  product_id        BigInt
  supplier_id       BigInt
  marketing_product marketing_product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_product_ve_product_id_b82003df_fk_marketing")
  crm_supplier      crm_supplier      @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_product_ve_supplier_id_a37f2935_fk_crm_suppl")

  @@unique([product_id, supplier_id], map: "marketing_product_vendor_product_id_supplier_id_d2ac86d5_uniq")
  @@index([product_id], map: "marketing_product_vendor_product_id_b82003df")
  @@index([supplier_id], map: "marketing_product_vendor_supplier_id_a37f2935")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model marketing_productfile {
  id                BigInt             @id @default(autoincrement())
  file              String             @db.VarChar(100)
  sequence          Int                @unique @db.SmallInt
  product_id        BigInt?
  marketing_product marketing_product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_productfil_product_id_68c8359c_fk_marketing")

  @@index([product_id], map: "marketing_productfile_product_id_68c8359c")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model marketing_productvariant {
  id                                     BigInt                                   @id @default(autoincrement())
  barcode                                String?                                  @db.VarChar(14)
  description                            String?
  sku                                    String?                                  @db.VarChar(12)
  price                                  Decimal?                                 @db.Decimal(10, 2)
  featured                               Boolean
  cost                                   Decimal?                                 @db.Decimal(10, 2)
  quantity                               Decimal?                                 @db.Decimal(10, 2)
  product_id                             BigInt?
  marketing_product                      marketing_product?                       @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_productvar_product_id_d830f278_fk_marketing")
  marketing_productvariantattributevalue marketing_productvariantattributevalue[]

  @@index([product_id], map: "marketing_productvariant_product_id_d830f278")
}

model marketing_productvariantattribute {
  id                                     BigInt                                   @id @default(autoincrement())
  name                                   String                                   @db.VarChar(255)
  marketing_productvariantattributevalue marketing_productvariantattributevalue[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model marketing_productvariantattributevalue {
  id                                BigInt                            @id @default(autoincrement())
  value                             String                            @db.VarChar(255)
  attribute_id                      BigInt
  variant_id                        BigInt?
  marketing_productvariantattribute marketing_productvariantattribute @relation(fields: [attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_productvar_attribute_id_2b0d83d5_fk_marketing")
  marketing_productvariant          marketing_productvariant?         @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "marketing_productvar_variant_id_4d257d6d_fk_marketing")

  @@unique([variant_id, attribute_id], map: "marketing_productvariant_variant_id_attribute_id_253d4de3_uniq")
  @@index([attribute_id], map: "marketing_productvariantattributevalue_attribute_id_2b0d83d5")
  @@index([variant_id], map: "marketing_productvariantattributevalue_variant_id_4d257d6d")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model operating_machine {
  id      BigInt  @id @default(autoincrement())
  name    String  @unique @db.VarChar(150)
  max_rpm Int
  domain  Decimal @db.Decimal(5, 2)

  @@index([name], map: "operating_machine_name_eb93fe62_like")
}
