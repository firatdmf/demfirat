generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  authentication_member      authentication_member?
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model authentication_member {
  id           BigInt     @id @default(autoincrement())
  company_name String     @db.VarChar(100)
  user_id      Int?       @unique
  auth_user    auth_user? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authentication_member_user_id_af273d22_fk_auth_user_id")
}

model crm_company {
  id          BigInt        @id @default(autoincrement())
  name        String        @db.VarChar(255)
  email       String        @db.VarChar(254)
  phone       String        @db.VarChar(15)
  address     String        @db.VarChar(255)
  city        String        @db.VarChar(100)
  state       String        @db.VarChar(100)
  zip_code    String        @db.VarChar(10)
  country     String        @db.VarChar(100)
  website     String        @db.VarChar(200)
  crm_contact crm_contact[]
  crm_note    crm_note[]
  todo_task   todo_task[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model crm_contact {
  id           BigInt       @id @default(autoincrement())
  name         String       @db.VarChar(200)
  email        String       @db.VarChar(254)
  address      String       @db.VarChar(255)
  birthday     DateTime?    @db.Date
  city         String       @db.VarChar(100)
  company_name String       @db.VarChar(255)
  country      String       @db.VarChar(100)
  job_title    String       @db.VarChar(100)
  phone        String       @db.VarChar(15)
  state        String       @db.VarChar(100)
  zip_code     String       @db.VarChar(10)
  company_id   BigInt?
  crm_company  crm_company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crm_contact_company_id_5104bcf2_fk_crm_company_id")
  crm_note     crm_note[]
  todo_task    todo_task[]

  @@index([company_id], map: "crm_contact_company_id_5104bcf2")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model crm_note {
  id            BigInt       @id @default(autoincrement())
  content       String
  created_at    DateTime     @db.Timestamptz(6)
  contact_id    BigInt?
  company_id    BigInt?
  modified_date DateTime     @db.Timestamptz(6)
  crm_company   crm_company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crm_note_company_id_9ceedb83_fk_crm_company_id")
  crm_contact   crm_contact? @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crm_note_contact_id_8d258ea9_fk_crm_contact_id")

  @@index([company_id], map: "crm_note_company_id_9ceedb83")
  @@index([contact_id], map: "crm_note_contact_id_8d258ea9")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model todo_task {
  id             BigInt       @id @default(autoincrement())
  task_name      String       @db.VarChar(200)
  due_date       DateTime     @db.Date
  description    String
  completed      Boolean
  created_at     DateTime     @db.Timestamptz(6)
  completed_at   DateTime     @db.Timestamptz(6)
  company_id     BigInt?
  contact_id     BigInt?
  days_since_due Int
  crm_company    crm_company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "todo_task_company_id_fed9e4bc_fk_crm_company_id")
  crm_contact    crm_contact? @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "todo_task_contact_id_4691b54e_fk_crm_contact_id")

  @@index([company_id], map: "todo_task_company_id_fed9e4bc")
  @@index([contact_id], map: "todo_task_contact_id_4691b54e")
}

model user {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
}

model collections {
  id         Int    @id @default(autoincrement())
  collection String
  data       Json?  @db.Json
}
